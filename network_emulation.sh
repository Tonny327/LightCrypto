#!/bin/bash
#
# network_emulation_fixed.sh
#
# –ü–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è bidirectional Li-Fi —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
# —Å —É—á—ë—Ç–æ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:
# 1) –û—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã –¥–ª—è netcat-—Ç–µ—Å—Ç–æ–≤
# 2) –î–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ tap_decrypt / tap_encrypt
# 3) –ü—Ä–æ–≤–µ—Ä–∫–∞ ping –ø–æ br0
# 4) –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Ä—É—á–Ω—É—é –ø—É—Å—Ç–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫ —á–µ—Ä–µ–∑ tap0/tap1

set -e

########################################
# 1. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
########################################
NS_A="nodeA"
NS_B="nodeB"

# veth-–∏–º–µ–Ω–∞ –∏ IP
VETH_A="vethA"
VETH_B="vethB"
IP_A="10.10.0.1"
IP_B="10.10.0.2"

# TAP-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ IP-–∞–¥—Ä–µ—Å–∞ –Ω–∞ –±—Ä–∏–¥–∂–µ
TAP_A="tap0"
TAP_B="tap1"
TAP_A_IP="10.0.0.1"
TAP_B_IP="10.0.0.2"

# –ü–æ—Ä—Ç—ã ¬´–±–æ–µ–≤—ã–µ¬ª, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–Ω–∏–º–∞—é—Ç tap_decrypt
PORT_B2A="6666"  # tap_decrypt(A) —Å–ª—É—à–∞–µ—Ç
PORT_A2B="5555"  # tap_decrypt(B) —Å–ª—É—à–∞–µ—Ç

# –ü–æ—Ä—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ netcat (–¥—Ä—É–≥–∏–µ, —á—Ç–æ–± –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å)
TEST_PORT_A2B="5557"
TEST_PORT_B2A="6667"

# –ü—É—Ç–∏ –∫ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞–º
ENCRYPT_BIN="./build/tap_encrypt"
DECRYPT_BIN="./build/tap_decrypt"

########################################
# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤
########################################
if [[ ! -x "$ENCRYPT_BIN" || ! -x "$DECRYPT_BIN" ]]; then
    echo "‚ùå –ë–∏–Ω–∞—Ä–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã: $ENCRYPT_BIN, $DECRYPT_BIN"
    exit 1
fi

########################################
# 3. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
########################################
echo "üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –Ω–µ–π–º—Å–ø–µ–π—Å—ã/–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã..."
sudo ip netns del "$NS_A" 2>/dev/null || true
sudo ip netns del "$NS_B" 2>/dev/null || true
sudo ip link delete "$VETH_A" 2>/dev/null || true

echo "üîß –°–æ–∑–¥–∞—ë–º –Ω–µ–π–º—Å–ø–µ–π—Å—ã $NS_A –∏ $NS_B..."
sudo ip netns add "$NS_A"
sudo ip netns add "$NS_B"

echo "üîó –°–æ–∑–¥–∞—ë–º veth: $VETH_A <-> $VETH_B"
sudo ip link add "$VETH_A" type veth peer name "$VETH_B"

# –ü–æ–º–µ—â–∞–µ–º –∫–æ–Ω—Ü—ã –≤ —Ä–∞–∑–Ω—ã–µ –Ω–µ–π–º—Å–ø–µ–π—Å—ã
sudo ip link set "$VETH_A" netns "$NS_A"
sudo ip link set "$VETH_B" netns "$NS_B"

# –ù–∞–∑–Ω–∞—á–∞–µ–º IP
echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º IP-–∞–¥—Ä–µ—Å–∞ –Ω–∞ veth..."
sudo ip netns exec "$NS_A" ip addr add "$IP_A/24" dev "$VETH_A"
sudo ip netns exec "$NS_B" ip addr add "$IP_B/24" dev "$VETH_B"
sudo ip netns exec "$NS_A" ip link set "$VETH_A" up
sudo ip netns exec "$NS_B" ip link set "$VETH_B" up

echo "üñß –°–æ–∑–¥–∞—ë–º TAP-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã $TAP_A / $TAP_B"
sudo ip netns exec "$NS_A" ip tuntap add dev "$TAP_A" mode tap user "$USER"
sudo ip netns exec "$NS_B" ip tuntap add dev "$TAP_B" mode tap user "$USER"
sudo ip netns exec "$NS_A" ip link set "$TAP_A" up
sudo ip netns exec "$NS_B" ip link set "$TAP_B" up

echo "üåâ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ—Å—Ç—ã br0 –≤ –∫–∞–∂–¥–æ–º –Ω–µ–π–º—Å–ø–µ–π—Å–µ..."
sudo ip netns exec "$NS_A" ip link add name br0 type bridge
sudo ip netns exec "$NS_A" ip link set "$TAP_A" master br0
sudo ip netns exec "$NS_A" ip link set "$VETH_A" master br0
sudo ip netns exec "$NS_A" ip link set br0 up
sudo ip netns exec "$NS_A" ip addr add "$TAP_A_IP/24" dev br0
sudo ip netns exec "$NS_A" ip addr flush dev "$TAP_A"

sudo ip netns exec "$NS_B" ip link add name br0 type bridge
sudo ip netns exec "$NS_B" ip link set "$TAP_B" master br0
sudo ip netns exec "$NS_B" ip link set "$VETH_B" master br0
sudo ip netns exec "$NS_B" ip link set br0 up
sudo ip netns exec "$NS_B" ip addr add "$TAP_B_IP/24" dev br0
sudo ip netns exec "$NS_B" ip addr flush dev "$TAP_B"

# –†–∞–∑—Ä–µ—à–∞–µ–º forwarding, icmp, udp
sudo ip netns exec "$NS_A" sysctl -w net.ipv4.ip_forward=1 >/dev/null
sudo ip netns exec "$NS_B" sysctl -w net.ipv4.ip_forward=1 >/dev/null
sudo ip netns exec "$NS_A" iptables -F
sudo ip netns exec "$NS_B" iptables -F
sudo ip netns exec "$NS_A" iptables -A INPUT -p udp -j ACCEPT
sudo ip netns exec "$NS_B" iptables -A INPUT -p udp -j ACCEPT
sudo ip netns exec "$NS_A" iptables -A INPUT -p icmp -j ACCEPT
sudo ip netns exec "$NS_B" iptables -A INPUT -p icmp -j ACCEPT
sudo ip netns exec "$NS_A" iptables -A FORWARD -p udp -j ACCEPT
sudo ip netns exec "$NS_B" iptables -A FORWARD -p udp -j ACCEPT

########################################
# 4. –ó–∞–ø—É—Å–∫ –Ω–∞—à–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º
########################################
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ $NS_A..."
sudo ip netns exec "$NS_A" bash -c "
  echo '[A] –ó–∞–ø—É—Å–∫–∞—é tap_decrypt –Ω–∞ 0.0.0.0:$PORT_B2A'
  $DECRYPT_BIN 0.0.0.0 $PORT_B2A > /tmp/decrypt_A.log 2>&1 &
  DECPID_A=\$!
  sleep 2
  echo '[A] –ó–∞–ø—É—Å–∫–∞—é tap_encrypt –Ω–∞ $IP_B:$PORT_A2B'
  $ENCRYPT_BIN $IP_B $PORT_A2B > /tmp/encrypt_A.log 2>&1 &
  ENCPID_A=\$!
  echo \$DECPID_A > /tmp/decA.pid
  echo \$ENCPID_A > /tmp/encA.pid
"

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ $NS_B..."
sudo ip netns exec "$NS_B" bash -c "
  echo '[B] –ó–∞–ø—É—Å–∫–∞—é tap_decrypt –Ω–∞ 0.0.0.0:$PORT_A2B'
  $DECRYPT_BIN 0.0.0.0 $PORT_A2B > /tmp/decrypt_B.log 2>&1 &
  DECPID_B=\$!
  sleep 2
  echo '[B] –ó–∞–ø—É—Å–∫–∞—é tap_encrypt –Ω–∞ $IP_A:$PORT_B2A'
  $ENCRYPT_BIN $IP_A $PORT_B2A > /tmp/encrypt_B.log 2>&1 &
  ENCPID_B=\$!
  echo \$DECPID_B > /tmp/decB.pid
  echo \$ENCPID_B > /tmp/encB.pid
"

echo "‚è≥ –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é..."
sleep 5

########################################
# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ UDP-—Å–≤—è–∑–Ω–æ—Å—Ç–∏ netcat'–æ–º (–Ω–∞ –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–∞—Ö)
########################################
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º UDP-—Å–≤—è–∑–Ω–æ—Å—Ç—å A‚ÜíB (–ø–æ—Ä—Ç $TEST_PORT_A2B)..."
sudo ip netns exec "$NS_B" nc -u -l "$TEST_PORT_A2B" > /tmp/udp_test_B.log 2>/tmp/udp_test_B_err.log &
NCPID_B=$!
sleep 1
echo "hello from A" | sudo ip netns exec "$NS_A" nc -u -w 1 "$IP_B" "$TEST_PORT_A2B" 2>/tmp/udp_test_A_err.log
sleep 1
sudo kill $NCPID_B 2>/dev/null || true
if grep -q "hello from A" /tmp/udp_test_B.log; then
    echo "‚úÖ UDP A‚ÜíB —Ä–∞–±–æ—Ç–∞–µ—Ç (—á–µ—Ä–µ–∑ –ø–æ—Ä—Ç $TEST_PORT_A2B)"
else
    echo "‚ùå UDP A‚ÜíB –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (—á–µ—Ä–µ–∑ –ø–æ—Ä—Ç $TEST_PORT_A2B)"
    echo "–õ–æ–≥ –æ—à–∏–±–æ–∫ A: $(cat /tmp/udp_test_A_err.log)"
    echo "–õ–æ–≥ –æ—à–∏–±–æ–∫ B: $(cat /tmp/udp_test_B_err.log)"
fi

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º UDP-—Å–≤—è–∑–Ω–æ—Å—Ç—å B‚ÜíA (–ø–æ—Ä—Ç $TEST_PORT_B2A)..."
sudo ip netns exec "$NS_A" nc -u -l "$TEST_PORT_B2A" > /tmp/udp_test_A.log 2>/tmp/udp_test_A_err.log &
NCPID_A=$!
sleep 1
echo "hello from B" | sudo ip netns exec "$NS_B" nc -u -w 1 "$IP_A" "$TEST_PORT_B2A" 2>/tmp/udp_test_B_err.log
sleep 1
sudo kill $NCPID_A 2>/dev/null || true
if grep -q "hello from B" /tmp/udp_test_A.log; then
    echo "‚úÖ UDP B‚ÜíA —Ä–∞–±–æ—Ç–∞–µ—Ç (—á–µ—Ä–µ–∑ –ø–æ—Ä—Ç $TEST_PORT_B2A)"
else
    echo "‚ùå UDP B‚ÜíA –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (—á–µ—Ä–µ–∑ –ø–æ—Ä—Ç $TEST_PORT_B2A)"
    echo "–õ–æ–≥ –æ—à–∏–±–æ–∫ B: $(cat /tmp/udp_test_B_err.log)"
    echo "–õ–æ–≥ –æ—à–∏–±–æ–∫ A: $(cat /tmp/udp_test_A_err.log)"
fi

########################################
# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ ping –ø–æ br0
########################################
echo "üì° –ü–∏–Ω–≥—É–µ–º –∏–∑ A (br0) ‚Üí B ($TAP_B_IP)..."
if sudo ip netns exec "$NS_A" ping -c 1 -I br0 "$TAP_B_IP"; then
  echo "‚úÖ Ping A->B –ø—Ä–æ—à—ë–ª!"
  PING_AB=true
else
  echo "‚ùå Ping A->B –Ω–µ –ø—Ä–æ—à—ë–ª"
fi

echo "üì° –ü–∏–Ω–≥—É–µ–º –∏–∑ B (br0) ‚Üí A ($TAP_A_IP)..."
if sudo ip netns exec "$NS_B" ping -c 1 -I br0 "$TAP_A_IP"; then
  echo "‚úÖ Ping B->A –ø—Ä–æ—à—ë–ª!"
  PING_BA=true
else
  echo "‚ùå Ping B->A –Ω–µ –ø—Ä–æ—à—ë–ª"
fi

########################################
# 7. (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ —á–µ—Ä–µ–∑ tap-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
#    –ú–æ–∂–µ—Ç–µ –∑–¥–µ—Å—å –≤—Ä—É—á–Ω—É—é –ø–æ—Å–ª–∞—Ç—å –∫–∞–¥—Ä –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å tcpdump
#    –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞, —Ç–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –ª–æ–≥–∏ "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –∫–∞–¥—Ä..."
########################################

echo "üîé –°–µ–π—á–∞—Å –ø—Ä–æ—Ü–µ—Å—Å—ã tap_encrypt/decrypt —Ä–∞–±–æ—Ç–∞—é—Ç."
echo "–í—ã –º–æ–∂–µ—Ç–µ –≤ –æ–¥–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∑–∞–π—Ç–∏ –≤ nsA (ip netns exec nodeA bash)"
echo "–∏ –≤ –¥—Ä—É–≥–æ–º nsB (ip netns exec nodeB bash), —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞—Ñ–∏–∫ –Ω–∞ tap0/tap1."
echo "–ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å 'tcpdump -i tap0' –∏ 'tcpdump -i tap1', –ø–∏–Ω–≥–∞–Ω—É—Ç—å 10.0.0.2 –∏ —Ç.–¥."
echo "–õ–∏–±–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é tap_encrypt --msg."

########################################
# 8. –î–µ–ª–∞–µ–º –ø–∞—É–∑—É, —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Ç–µ—Å—Ç
########################################
echo "‚è∏ –û—Å—Ç–∞–≤–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã —Ä–∞–±–æ—Ç–∞—Ç—å 30 —Å–µ–∫—É–Ω–¥, –º–æ–∂–Ω–æ –ø–æ–Ω–∞–±–ª—é–¥–∞—Ç—å –ª–æ–≥–∏..."
sleep 30

########################################
# 9. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –≤—ã–≤–æ–¥–∏–º –ª–æ–≥–∏
########################################
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º tap_decrypt / tap_encrypt..."
sudo ip netns exec "$NS_A" bash -c "
  kill \$(cat /tmp/decA.pid) 2>/dev/null || true
  kill \$(cat /tmp/encA.pid) 2>/dev/null || true
"
sudo ip netns exec "$NS_B" bash -c "
  kill \$(cat /tmp/decB.pid) 2>/dev/null || true
  kill \$(cat /tmp/encB.pid) 2>/dev/null || true
"

echo "---- –õ–û–ì–ò nsA decrypt ----"
sudo ip netns exec "$NS_A" cat /tmp/decrypt_A.log || true
echo "---- –õ–û–ì–ò nsA encrypt ----"
sudo ip netns exec "$NS_A" cat /tmp/encrypt_A.log || true
echo "---- –õ–û–ì–ò nsB decrypt ----"
sudo ip netns exec "$NS_B" cat /tmp/decrypt_B.log || true
echo "---- –õ–û–ì–ò nsB encrypt ----"
sudo ip netns exec "$NS_B" cat /tmp/encrypt_B.log || true

########################################
# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ ¬´–•–µ—à–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç¬ª –≤ –ª–æ–≥–∞—Ö
########################################
echo "üîé –ò—â–µ–º '–•–µ—à–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç' –≤ –ª–æ–≥–∞—Ö..."
HASH_OK=false
if ( sudo ip netns exec "$NS_A" grep -q "–•–µ—à–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç" /tmp/decrypt_A.log && \
     sudo ip netns exec "$NS_B" grep -q "–•–µ—à–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç" /tmp/decrypt_B.log ); then
  HASH_OK=true
fi

########################################
# 11. –£–¥–∞–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
########################################
echo "üßπ –£–¥–∞–ª—è–µ–º –Ω–µ–π–º—Å–ø–µ–π—Å—ã..."
sudo ip netns del "$NS_A" 2>/dev/null || true
sudo ip netns del "$NS_B" 2>/dev/null || true
sudo ip link delete "$VETH_A" 2>/dev/null || true

########################################
# 12. –ò—Ç–æ–≥
########################################
if [[ "$PING_AB" == "true" && "$PING_BA" == "true" && "$HASH_OK" == "true" ]]; then
  echo "üéâ –î–≤—É–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±–º–µ–Ω (ICMP –∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ) –ø—Ä–æ–≤–µ—Ä–µ–Ω: A->B –∏ B->A!"
else
  echo "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã."
  echo "   –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç—Ä–∞—Ñ–∏–∫ —Ä–µ–∞–ª—å–Ω–æ —à—ë–ª —á–µ—Ä–µ–∑ tap."
fi

exit 0
